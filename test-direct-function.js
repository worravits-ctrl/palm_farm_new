const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö OfflineSearchEngine ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÉ‡∏ô API server
const dbPath = path.join(__dirname, 'database', 'palmoil.db');

// Copy ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getNextHarvestDate ‡∏°‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
async function getNextHarvestDate(userId) {
    return new Promise((resolve, reject) => {
        const db = new sqlite3.Database(dbPath);
        
        const query = `
            SELECT date as last_harvest_date 
            FROM harvest_data 
            WHERE user_id = ? 
            ORDER BY date DESC 
            LIMIT 1
        `;

        db.get(query, [userId], (err, row) => {
            if (err) {
                reject(err);
                return;
            }

            if (!row) {
                resolve("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏õ‡∏≤‡∏•‡πå‡∏°‡∏™‡∏∏‡∏Å (‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ó‡∏∏‡∏Å 15-20 ‡∏ß‡∏±‡∏ô)");
                return;
            }

            try {
                // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (YYYY-MM-DD)
                const lastHarvestDate = new Date(row.last_harvest_date);
                
                // ‡∏ö‡∏ß‡∏Å 15 ‡∏ß‡∏±‡∏ô
                const nextHarvestDate = new Date(lastHarvestDate);
                nextHarvestDate.setDate(lastHarvestDate.getDate() + 15);
                
                // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
                const thaiDate = nextHarvestDate.toLocaleDateString('th-TH', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    weekday: 'long'
                });
                
                // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                const today = new Date();
                const diffTime = nextHarvestDate - today;
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                
                let message = `‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ: ‡∏ß‡∏±‡∏ô${thaiDate}`;
                
                if (diffDays > 0) {
                    message += ` (‡∏≠‡∏µ‡∏Å ${diffDays} ‡∏ß‡∏±‡∏ô)`;
                } else if (diffDays === 0) {
                    message += ` (‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ!)`;
                } else {
                    message += ` (‡πÄ‡∏•‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏•‡πâ‡∏ß ${Math.abs(diffDays)} ‡∏ß‡∏±‡∏ô)`;
                }
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                const lastHarvestThai = lastHarvestDate.toLocaleDateString('th-TH', {
                    year: 'numeric',
                    month: 'long', 
                    day: 'numeric'
                });
                message += `\n\n‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${lastHarvestThai}`;
                
                resolve(message);
                
            } catch (error) {
                resolve(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${error.message}`);
            }
            
            db.close();
        });
    });
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
async function testDirectFunction() {
    console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');
    
    try {
        const result = await getNextHarvestDate(1);
        console.log('‚úÖ Result:', result);
        return result;
    } catch (error) {
        console.error('‚ùå Error:', error);
        return '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î';
    }
}

// ‡∏£‡∏±‡∏ô test
testDirectFunction().then(result => {
    console.log('\nüéØ Final Answer:', result);
    console.log('\n‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô API');
}).catch(console.error);